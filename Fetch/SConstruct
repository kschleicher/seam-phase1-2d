from rsf.proj import *

# well log data on open.source.geoscience online repository not fetched in
# this SConstruct file.
#dir='well_1',
#          server='http://s3.amazonaws.com',
#	  top='open.source.geoscience/open_data/seam_ph1_2d_classic')
#BedDipX.Well.1			ResistivityNormal.Well.1
#BedDipY.Well.1			ResistivityParallel.Well.1
#Delta.Well.1			ResistivityVertical.Well.1
#Density.Well.1			SEAM Phase I Well Log Data.pdf
#Epsilon.Well.1			TTIDipX.Well.1
#Gamma.Well.1			TTIDipY.Well.1
#GeoIndexRes.Well.1		Vp.Well.1
#GeoSaltIndex.Well.1		VsElasticOriginal.Well.1
#LayerGeoIndex.Well.1		VsElasticSim.Well.1
#PorosityEffective.Well.1	Vshale.Well.1
#PorosityTotal.Well.1		Well_Log_Plots.pdf
#ResistivityHorizontal.Well.1

#Everything is in a single tar file, but this scons uses the individual files
#Fetch('seam_phase_1_2d_classic.tar.gz',dir='seam_ph1_2d_classic',
#          server='http://s3.amazonaws.com',
#	  top='open.source.geoscience/open_data')

# first, look at the pdf files
pdfread = WhereIs('acroread') or WhereIs('kpdf') or WhereIs('evince') or \
          WhereIs('xpdf') or WhereIs('gv') or WhereIs('open')

pdfs = Split('''
2D_Model_Subset
2D_Model_Subset_plots
Shots_Receivers_23900
Shot_Receivers_23900_plots
Seam_wavelet
''')

if pdfread:
    for pdf in pdfs:
        Fetch(pdf+'.pdf',dir='2d_model_subset',
              server='http://s3.amazonaws.com',
              top='open.source.geoscience/open_data/seam_ph1_2d_classic')
        Flow(pdf,pdf+'.pdf',pdfread + ' $SOURCE',stdin=0,stdout=0)

Fetch('Shots_Receivers_23900.sgy',dir='2d_data_subset',
      server='http://s3.amazonaws.com',
      top='open.source.geoscience/open_data/seam_ph1_2d_classic')

Flow(['shots-receivers-23900.rsf','shots-receivers-23900_hdr.rsf',
      'shots-receivers-23900.thdr','shots-receivers-23900.bhdr'],
     'Shots_Receivers_23900.sgy',
     '''
     sfsegyread tfile=${TARGETS[1]} 
     hfile=${TARGETS[2]}  bfile=${TARGETS[3]} 
     ''')

Flow('headerattr.txt','shots-receivers-23900_hdr.rsf',
     'sfheaderattr > $TARGET && /bin/cat $TARGET',stdout=-1)

#91 headers, 136051 traces
#******************************************************************************* 
#     key     	            min     	              max    	          mean
#------------------------------------------------------------------------------- 
#tracr       1              1 @ 0	        136051 @ 136050	         68026
#tracf       3            361 @ 0	        649261 @ 900	        324811
#ep          4           3041 @ 0	         15191 @ 135150	          9116
#gelev      12            -15 @ 0	           -15 @ 0	           -15
#selev      13            -15 @ 0	           -15 @ 0	           -15
#sdepth     14             15 @ 0	            15 @ 0	            15
#scalel     19              1 @ 0	             1 @ 0	             1
#scalco     20              1 @ 0	             1 @ 0	             1
#sx         21           3700 @ 0	         18700 @ 135150	         11200
#sy         22          23900 @ 0	         23900 @ 0	         23900
#gx         23              0 @ 0	         22500 @ 900	         11250
#gy         24          23900 @ 0	         23900 @ 0	         23900
#ns         38           2001 @ 0	          2001 @ 0	          2001
#dt         39           8000 @ 0	          8000 @ 0	          8000
#grnlof     68             15 @ 0	            15 @ 0	            15
#smeas4     86          26881 @ 0	         26881 @ 0	         26881
#smeasu     88         -32768 @ 127	         32515 @ 894	       1987.64
#unass1     89              6 @ 66	         65298 @ 113522	       32645.3
#unass2     90          38166 @ 0	         38166 @ 0	         38166
#******************************************************************************* 

Plot('shots-receivers-23900','put n2=901 n3=151 | window j3=10 |grey title=Shots',view=1)

Flow('sx','shots-receivers-23900_hdr.rsf','window n1=1 f1=21 squeeze=n | add scale=0.01')
Flow('gx','shots-receivers-23900_hdr.rsf','window n1=1 f1=23 squeeze=n | add scale=0.04')
Flow('head','gx sx','cat axis=1 ${SOURCES[1]}')

Flow('shots','shots-receivers-23900 head',
     '''
     intbin head=${SOURCES[1]} xkey=0 ykey=1 | 
     put 
     label3=Shot     unit3=km o3=3.7 d3=0.1
     label2=Receiver unit2=km o2=0   d2=0.025
     ''')

Result('shots',
       '''
       byte gainpanel=all |
       grey3 frame1=1000 frame2=500 frame3=100 title=Shots
       ''')

#dir='2d_model_subset',
#          server='http://s3.amazonaws.com',
#	  top='open.source.geoscience/open_data/seam_ph1_2d_classic')
#2D_Model_Subset.pdf		Vp_Elastic_N23900.sgy
#2d_Model_Subset_plots.pdf	Vs_Elastic_N23900.sgy
#Den_Elastic_N23900.sgy


Fetch('Vp_Elastic_N23900.sgy',dir='2d_model_subset',
          server='http://s3.amazonaws.com',
	  top='open.source.geoscience/open_data/seam_ph1_2d_classic')
Flow(['Vp_Elastic_N23900.rsf' ,'Vp_Elastic_N23900_hdr.rsf',
      'Vp_Elastic_N23900.thdr','Vp_Elastic_N23900.bhdr'],
     'Vp_Elastic_N23900.sgy',
     '''
     sfsegyread tfile=${TARGETS[1]} 
     hfile=${TARGETS[2]}  bfile=${TARGETS[3]} 
     ''')

Flow('Vp_headerattr.txt','Vp_Elastic_N23900_hdr.rsf',
     'sfheaderattr > $TARGET && /bin/cat $TARGET',stdout=-1)

#The headers can be investigated by pasteing this into a terminal (not the #): 
#<Vp_Elastic_N23900_hdr.rsf sfheaderattr 
# the results of the command is a summary of the headers. This information is
# needed to write the sftahwrite.
#91 headers, 1751 traces
#*******************************************************************************# 
#     key     	            min     	              max    	          mean
#-------------------------------------------------------------------------------# 
#tracl       0              1 @ 0	          1751 @ 1750	           876
#tracr       1              1 @ 0	          1751 @ 1750	           876
#trid        7              1 @ 0	             1 @ 0	             1
#sx         21              0 @ 0	         35000 @ 1750	         17500
#sy         22          23900 @ 0	         23900 @ 0	         23900
#gx         23              0 @ 0	         35000 @ 1750	         17500
#gy         24          23900 @ 0	         23900 @ 0	         23900
#ns         38           1501 @ 0	          1501 @ 0	          1501
#dt         39          10000 @ 0	         10000 @ 0	         10000
#******************************************************************************* 

Flow(['vp1.rsf','vp1_hdr.rsf'],
     ['Vp_Elastic_N23900.rsf','Vp_Elastic_N23900_hdr.rsf'],
     '''
     sftahread \
          input=${SOURCES[0]} \
	  verbose=1 \
     | sftahwrite \
          output=${TARGETS[0]} \
          label2="sx" o2=0 n2=1751 d2=20 \
	  verbose=1
     ''',stdout=0, stdin=0)
Flow('vp','Vp_Elastic_N23900.rsf',
     '''
     sfput d1=10 d2=20 label2=Distance unit2=m label1=Depth unit1=m label=Velocity unit=m/s 
     ''')
      
Result('vp',"sfgrey title='Vp' scalebar=y color=j allpos=y barreverse=y")
#Result('vp1',"sfgrey title='vp' scalebar=y color=j")

Fetch('Vs_Elastic_N23900.sgy',dir='2d_model_subset',
          server='http://s3.amazonaws.com',
	  top='open.source.geoscience/open_data/seam_ph1_2d_classic')
Flow(['Vs_Elastic_N23900.rsf' ,'Vs_Elastic_N23900_hdr.rsf',
      'Vs_Elastic_N23900.thdr','Vs_Elastic_N23900.bhdr'],
      'Vs_Elastic_N23900.sgy',
     '''
     sfsegyread tfile=${TARGETS[1]} 
     hfile=${TARGETS[2]}  bfile=${TARGETS[3]} 
     ''')

Flow('vs','Vs_Elastic_N23900.rsf',
     '''
     sfput d1=10 d2=20 label2=Distance unit2=m label1=Depth unit1=m label=Velocity unit=m/s 
     ''')
      
Result('vs',"sfgrey title='Vs' scalebar=y color=j allpos=y barreverse=y")

Fetch('Den_Elastic_N23900.sgy',dir='2d_model_subset',
          server='http://s3.amazonaws.com',
	  top='open.source.geoscience/open_data/seam_ph1_2d_classic')
Flow(['Den_Elastic_N23900.rsf' ,'Den_Elastic_N23900_hdr.rsf',
      'Den_Elastic_N23900.thdr','Den_Elastic_N23900.bhdr'],
      'Den_Elastic_N23900.sgy',
     '''
     sfsegyread tfile=${TARGETS[1]} 
     hfile=${TARGETS[2]}  bfile=${TARGETS[3]} 
     ''')

Flow('den','Den_Elastic_N23900.rsf',
     '''
     sfput d1=10 d2=20 label2=Distance unit2=m label1=Depth unit1=m label=Density unit="g/cm\^3\_" 
     ''')
      
Result('den',"sfgrey title='Density' scalebar=y color=j allpos=y barreverse=y")

for wavelet in ["SEAM_wavelet_8ms", 
                "SEAM_wavelet-g_8ms", 
		"SEAM_wavelet-g-zph_8ms", 
		"desig_8ms"] :
   Fetch(wavelet+".sgy",dir='seam_phase_1_wavelets',
             server='http://s3.amazonaws.com',
   	     top='open.source.geoscience/open_data/seam_ph1_2d_classic')
   Flow(['%s.rsf'%wavelet ,'%s_hdr.rsf'%wavelet,
         '%s.thdr'%wavelet,'%s.bhdr'%wavelet],
         '%s.sgy'%wavelet,
        '''
        sfsegyread tfile=${TARGETS[1]} 
        hfile=${TARGETS[2]}  bfile=${TARGETS[3]} 
        ''')

   Result(wavelet,'sfwiggle label2=Amplitude title=%s pclip=100'%wavelet)

End()
